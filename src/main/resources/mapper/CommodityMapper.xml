<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.mybatisplus.mapper.CommodityMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.example.mybatisplus.model.domain.Commodity">
        <id column="id" property="id" />
        <result column="sup_id" property="supId" />
        <result column="name" property="name" />
        <result column="barcode" property="barcode" />
        <result column="cla_id" property="claId" />
        <result column="inventory" property="inventory" />
        <result column="unit_id" property="unitId" />
        <result column="purchase_price" property="purchasePrice" />
        <result column="price" property="price" />
        <result column="wholesale_price" property="wholesalePrice"/>
        <result column="is_discount" property="isDiscount" />
        <result column="is_multibarcode" property="isMultibarcode" />
        <result column="supplier_id" property="supplierId" />
        <result column="produce_date" property="produceDate" />
        <result column="expiration_time" property="expirationTime" />
        <result column="specification" property="specification" />
        <result column="parent" property="parent" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
        <result column="is_deleted" property="isDeleted" />
    </resultMap>
    <!-- 通用查询映射结果 -->
    <resultMap id="ClassificationMap" type="com.example.mybatisplus.model.domain.Classification">
        <id column="id" property="id" />
        <result column="sup_id" property="supId" />
        <result column="cla_id" property="claId" />
        <result column="classification" property="classification" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <resultMap id="UnitMap" type="com.example.mybatisplus.model.domain.Unit">
        <id column="id" property="id" />
        <result column="sup_id" property="supId" />
        <result column="unit" property="unit" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <resultMap id="SupplierMap" type="com.example.mybatisplus.model.domain.Supplier">
        <id column="id" property="id" />
        <result column="sup_id" property="supId" />
        <result column="supplier_name" property="name" />
        <result column="number" property="number" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <resultMap id="MultiBarcodeMap" type="com.example.mybatisplus.model.domain.Multibarcode">
        <id column="id" property="id" />
        <result column="com_id" property="comId" />
        <result column="m_barcode" property="barcode" />
        <result column="is_deleted" property="isDeleted" />
        <result column="create_time" property="createTime" />
        <result column="update_time" property="updateTime" />
    </resultMap>
    <resultMap id="CommodityPage" type="com.example.mybatisplus.model.domain.Commodity" extends="BaseResultMap">
        <association property="classification"  javaType="com.example.mybatisplus.model.domain.Classification" resultMap="ClassificationMap"></association>
        <association property="unit"  javaType="com.example.mybatisplus.model.domain.Unit" resultMap="UnitMap"></association>
        <association property="supplier"  javaType="com.example.mybatisplus.model.domain.Supplier" resultMap="SupplierMap"></association>
    </resultMap>
    <resultMap id="UniqueBarcode" type="com.example.mybatisplus.model.domain.Commodity" extends="BaseResultMap">
        <collection property="multibarcodes"  ofType="com.example.mybatisplus.model.domain.Multibarcode" resultMap="MultiBarcodeMap"></collection>
    </resultMap>
    <resultMap id="SearchPage" type="com.example.mybatisplus.model.domain.Commodity" extends="BaseResultMap">
        <association property="classification"  javaType="com.example.mybatisplus.model.domain.Classification" resultMap="ClassificationMap"></association>
        <association property="unit"  javaType="com.example.mybatisplus.model.domain.Unit" resultMap="UnitMap"></association>
        <association property="supplier"  javaType="com.example.mybatisplus.model.domain.Supplier" resultMap="SupplierMap"></association>
        <collection property="multibarcodes" ofType="com.example.mybatisplus.model.domain.Multibarcode" resultMap="MultiBarcodeMap"></collection>
    </resultMap>
    <select id="selectCommodityPage" resultMap="CommodityPage">
        select commodity.id,commodity.name,commodity.barcode,commodity.inventory,commodity.purchase_price,
               commodity.price,commodity.specification,commodity.is_discount,commodity.wholesale_price,
               commodity.produce_date,commodity.expiration_time,commodity.cla_id, commodity.unit_id,
               commodity.supplier_id,commodity.sup_id,commodity.is_multibarcode,
               classification.classification,
               commodity.create_time,unit.unit,
               supplier.name as supplier_name, supplier.number
        from commodity
        left outer join supplier on commodity.supplier_id = supplier.id and supplier.is_deleted = 0
        left outer join classification on classification.id = commodity.cla_id and classification.is_deleted = 0
        left outer join unit on commodity.unit_id = unit.id and unit.is_deleted = 0
        <where>
            commodity.sup_id = #{commodity.supId} and commodity.is_deleted = 0
            <if test="commodity.claId > 0">
            and commodity.cla_id = #{commodity.claId}
            </if>
        </where>
    </select>
    <select id="getUniqueBarcode" resultMap="UniqueBarcode">
        select commodity.barcode, multibarcode.barcode as m_barcode
        from commodity left outer join multibarcode
        on commodity.id = multibarcode.com_id and commodity.is_deleted = 0 and multibarcode.is_deleted = 0
        where (commodity.barcode = #{commodity.barcode} or multibarcode.barcode = #{commodity.barcode})
        and sup_id = #{commodity.supId}
    </select>
    <select id="selectCommodityInOrder" resultMap="CommodityPage">
        select commodity.id,commodity.name,commodity.barcode,commodity.inventory,commodity.purchase_price,
        commodity.price,commodity.specification,commodity.is_discount,commodity.wholesale_price,
        commodity.produce_date,commodity.expiration_time,commodity.cla_id, commodity.unit_id,
        commodity.supplier_id,commodity.sup_id,commodity.is_multibarcode,
        classification.classification,
        commodity.create_time,unit.unit,
        supplier.name as supplier_name, supplier.number
        from commodity
        left outer join supplier on commodity.supplier_id = supplier.id and supplier.is_deleted = 0
        left outer join classification on classification.id = commodity.cla_id and classification.is_deleted = 0
        left outer join unit on commodity.unit_id = unit.id and unit.is_deleted = 0
        <where>
         commodity.sup_id = #{commodity.supId} and commodity.is_deleted = 0
            <if test="commodity.claId > 0">
                and commodity.cla_id = #{commodity.claId}
            </if>
        </where>
        order by CONVERT(${sortDTO.prop} USING gbk) COLLATE gbk_chinese_ci ${sortDTO.order}
    </select>
    <select id="searchCommodityPage" resultMap="SearchPage">
        select commodity.id,commodity.name,commodity.barcode,commodity.inventory,commodity.purchase_price,
        commodity.price,commodity.specification,commodity.is_discount,commodity.wholesale_price,
        commodity.produce_date,commodity.expiration_time,commodity.cla_id, commodity.unit_id,
        commodity.supplier_id,commodity.sup_id,commodity.is_multibarcode,
        classification.classification,
        commodity.create_time,unit.unit,
        supplier.name as supplier_name, supplier.number,
        multibarcode.barcode as m_barcode
        from commodity
        left outer join supplier on commodity.supplier_id = supplier.id and supplier.is_deleted = 0
        left outer join classification on classification.id = commodity.cla_id and classification.is_deleted = 0
        left outer join unit on commodity.unit_id = unit.id and unit.is_deleted = 0
        left outer join multibarcode on multibarcode.com_id = commodity.id and multibarcode.is_deleted = 0
        <where>
            commodity.sup_id = #{commodity.supId} and commodity.is_deleted = 0
            <if test="commodity.name != null and commodity.name != ''">
                and (commodity.name like '%${commodity.name}%'
                or commodity.barcode like '%${commodity.barcode}%'
                or multibarcode.barcode like '%${commodity.barcode}%')
            </if>
            <if test="commodity.claId > 0">
                and commodity.cla_id = #{commodity.claId}
            </if>
        </where>
        <if test="sortDTO.order == 'asc' or sortDTO.order == 'desc'">
            order by CONVERT(${sortDTO.prop} USING gbk) COLLATE gbk_chinese_ci ${sortDTO.order}
        </if>
    </select>
    <select id="advanceSearch" resultMap="SearchPage">
        select commodity.id,commodity.name,commodity.barcode,commodity.inventory,commodity.purchase_price,
        commodity.price,commodity.specification,commodity.is_discount,commodity.wholesale_price,
        commodity.produce_date,commodity.expiration_time,commodity.cla_id, commodity.unit_id,
        commodity.supplier_id,commodity.sup_id,commodity.is_multibarcode,
        classification.classification,
        commodity.create_time,unit.unit,
        supplier.name as supplier_name, supplier.number,
        multibarcode.barcode as m_barcode
        from commodity
        left outer join supplier on commodity.supplier_id = supplier.id and supplier.is_deleted = 0
        left outer join classification on classification.id = commodity.cla_id and classification.is_deleted = 0
        left outer join unit on commodity.unit_id = unit.id and unit.is_deleted = 0
        left outer join multibarcode on multibarcode.com_id = commodity.id and multibarcode.is_deleted = 0
        <where>
            commodity.sup_id = #{commodity.supId} and commodity.is_deleted = 0
            <if test="claIds.size()>0 and claIds != null">
                and classification.id in
                <foreach item="item" index="index" collection="claIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="supplierIds.size()>0 and supplierIds != null">
                and supplier.id in
                <foreach item="item" index="index" collection="supplierIds" open="(" separator="," close=")">
                    #{item}
                </foreach>
            </if>
            <if test="commodity.isDiscount != null">
                and commodity.is_discount = #{commodity.isDiscount}
            </if>
            <if test="commodity.createTime != null">
                and #{commodity.createTime} &lt; commodity.create_time
            </if>
            <if test="secondCommodity.createTime != null">
                and commodity.create_time &lt; #{secondCommodity.createTime}
            </if>
            <if test="commodity.price != null">
                and #{commodity.price} &lt; commodity.price
            </if>
            <if test="secondCommodity.price != null">
                and commodity.price &lt; #{secondCommodity.price}
            </if>
            <if test="commodity.inventory != null">
                and #{commodity.inventory} &lt; commodity.inventory
            </if>
            <if test="secondCommodity.inventory != null">
                and commodity.inventory &lt; #{secondCommodity.inventory}
            </if>
            <if test="commodity.name != null and commodity.name != ''">
                and (commodity.name like '%${commodity.name}%'
                or commodity.barcode like '%${commodity.barcode}%'
                or multibarcode.barcode like '%${commodity.barcode}%')
            </if>
            <if test="commodity.specification != null and commodity.specification != ''">
                and commodity.specification = #{commodity.specification}
            </if>
            <if test="commodity.isMultibarcode != null">
                and commodity.is_multibarcode = #{commodity.isMultibarcode}
            </if>
        </where>
        <if test="sortDTO.order == 'asc' or sortDTO.order == 'desc'">
            order by CONVERT(${sortDTO.prop} USING gbk) COLLATE gbk_chinese_ci ${sortDTO.order}
        </if>
    </select>

</mapper>
